{
    "collab_server" : "",
    "contents" : "library(fpp)\nlibrary(dplyr)\n#\n#Read csv file and make it a time series\nRS <- read.csv(\"RSGCSN.csv\") %>%\n  select(-DATE) %>%\n  ts(start= c(1992,1), frequency=12) \n#\n#divide data into 2 sets, training and testing\ntr <- window(RS, end=c(2011,12))\nte <- window(RS, start=c(2012,1))\n#\nplot(RS)\nabline(v=c(2011,12), col=\"grey\")\n#\n#Question 1\n#use the ets() function to fit \n#Holt-Winters Model to sales data\nf.HW <- ets(tr, model=\"AAM\", restrict = FALSE)\nsummary(f.HW)\n\n#use the forecast() function to obtain 68 month ahead\n#forecast\nfc.HW <- forecast(f.HW, h=68)\n#plot forecast and overlay testing data\nplot(fc.HW)\npoints(te, col=\"red\", pch=19)\n\n#reproduce plot, zooming in on forecast\nplot(fc.HW, xlim=c(2009,2018), ylim=c(40000,60000))\npoints(te, col=\"red\", pch=19)\n\n#in-sample and out-of-sample fit statistics\nfit <- accuracy(fc.HW, te)\nfit\n\nnaive.fit <- naive(tr, h = 68)\naccuracy(naive.fit)\n#\n# Question 2\n#use the ets() function to fit \n#Holt-Winters Model to sales data, restricting damping\nf.HW2 <- ets(tr, model=\"AAM\", damped = FALSE, restrict =FALSE)\nsummary(f.HW2)\n\n#use the forecast() function to obtain 68 month ahead\n#forecast\nfc.HW2 <- forecast(f.HW2, h=68)\n#plot forecast and overlay testing data\nplot(fc.HW2, xlim=c(2009,2018), ylim=c(40000,60000))\npoints(te, col=\"red\", pch=19)\n\n#in-sample and out-of-sample fit statistics\nfit2 <- accuracy(fc.HW2, te)\nfit2\n\n#\n# Question 3\n#optimal ets() model selection\n#use the ets() function to fit \n#\"ZZZ\" to sales data\nf.o <- ets(tr, model=\"ZZZ\", restrict =FALSE)\nsummary(f.o)\n\n#use the forecast() function to obtain 68 month ahead\n#forecast\nfc.o <- forecast(f.o, h=68)\n#plot forecast and overlay testing data\nplot(fc.o, xlim=c(2009,2018), ylim=c(40000,60000))\npoints(te, col=\"red\", pch=19)\n\n#in-sample and out-of-sample fit statistics\nfito <- accuracy(fc.o, te)\nfito\n\n#\n#Question 4\n#optimized model using BoxCox transformed data\nL <- BoxCox.lambda(tr)\nz <- BoxCox(tr,L)\nz\nfB.O <- ets(tr, model=\"ZZZ\", restrict = FALSE, lambda = L)\nsummary(fB.O)\n\n#use the forecast() function to obtain 68 month ahead\n#forecast\nfBc.O <- forecast(fB.O, h=68)\n#plot forecast \nplot(fBc.O, xlim=c(2009,2018), ylim=c(40000,60000))\npoints(te, col=\"red\", pch=19)\n\n#in-sample and out-of-sample fit statistics\nfitBcO <- accuracy(fBc.O, te)\nfitBcO\n\n#\n#Question 5\n#optimized BoxCox with Damping\nfB.OD <- ets(tr, model=\"ZZZ\", damped = TRUE, restrict = FALSE, lambda = L)\nsummary(fB.OD)\n\n#use the forecast() function to obtain 68 month ahead\n#forecast\nfBc.OD <- forecast(fB.OD, h=68)\n#plot forecast \nplot(fBc.OD, xlim=c(2009,2018), ylim=c(40000,60000))\npoints(te, col=\"red\", pch=19)\n\n#in-sample and out-of-sample fit statistics\nfitBcOD <- accuracy(fBc.OD, te)\nfitBcOD\n\n#Question 6\n#\n# Discarding Old Data\n#\nFS <- NULL\nfor(sy in (1992:2006)){\n  td <- window(RS,start=c(sy,1), end=c(2011,12))\n  L <- BoxCox.lambda(td)\n  fBC <- ets(td, model=\"ZZZ\",  restrict=FALSE, lambda=L)\n  RMSE <- accuracy(fBC)[2]\n  FS <- rbind(FS,c(sy,RMSE))\n}\ncolnames(FS) <- c(\"Starting Year\",\"RMSE\")\nFS\n#2003 has the lowest RMSE\n#create reduced training set\ntrr <- window(RS, start=c(2003,1), end=c(2011,12))\n\n#\n#Question 7\n#fitting a model on the reduced training dataset\n#optimized model using BoxCox transformed data\nLrr <- BoxCox.lambda(trr)\nzrr <- BoxCox(trr,Lrr)\nzrr\nf <- ets(trr, model=\"ZZZ\", restrict = FALSE, lambda = Lrr)\nsummary(f)\n\n#use the forecast() function to obtain 68 month ahead\n#forecast\nfc <- forecast(f, h=68)\n#plot forecast \nplot(fc, xlim=c(2009,2018), ylim=c(40000,60000))\npoints(te, col=\"red\", pch=19)\n\n#in-sample and out-of-sample fit statistics\nfitfc <- accuracy(fc, te)\nfitfc\n\n#\n#Question 8\n#set training set\ntr.new <- window(RS, start=c(2003,1), end=c(2017,8))\n#select ETS model from Q7 -- (M,A,A)\nff <- ets(tr.new, model=\"MAA\", restrict = FALSE)\nsummary(ff)\n\n#use the forecast() function to obtain 64 month ahead\n#forecast\nffc <- forecast(ff, h=64)\n#plot forecast \nplot(ffc)\n\n0.9977177/0.9224311*0.9580372\n627.4568/494.1545*541.9784\n",
    "created" : 1509385478327.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3253972640",
    "id" : "C695236B",
    "lastKnownWriteTime" : 1508787027,
    "last_content_update" : 1508787027,
    "path" : "C:/Users/jocel/OneDrive/Fall 2017/OM337_scanalytics/HW7/Walker_Jocelyne_HW7/Walker_Jocelyne_HW7.R",
    "project_path" : "Walker_Jocelyne_HW7.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}